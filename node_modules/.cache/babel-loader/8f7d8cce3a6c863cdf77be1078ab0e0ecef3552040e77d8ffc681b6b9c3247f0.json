{"ast":null,"code":"var _jsxFileName = \"/Users/amirbekshomurodov/Documents/GitHub/cs2001-2023-24-group-49-1/src/pages/CheckAllergy.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllergyTable() {\n  _s();\n  const [allergies, setAllergies] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = sessionStorage.getItem(\"token\");\n        const email = sessionStorage.getItem(\"email\");\n        const response = await axios.get(`http://localhost:8080/api/user/allergy/${email}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setAllergies(response.data);\n      } catch (error) {\n        console.error(\"Error fetching allergy data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Allergy Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Common Allergies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Uncommon Allergies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Other Allergies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: allergies.length > 0 ? allergies.map((allergy, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: allergy.common_allergies || \"Not chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: allergy.uncommon_allergies || \"Not chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: allergy.other_allergies || \"Not chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            className: \"text-center\",\n            children: \"No allergy data found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(AllergyTable, \"0DBAnQ+bzHuns2xRxLGh0wsOz3s=\");\n_c = AllergyTable;\nexport default AllergyTable;\nvar _c;\n$RefreshReg$(_c, \"AllergyTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AllergyTable","_s","allergies","setAllergies","fetchData","token","sessionStorage","getItem","email","response","get","headers","Authorization","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","allergy","index","common_allergies","uncommon_allergies","other_allergies","colSpan","_c","$RefreshReg$"],"sources":["/Users/amirbekshomurodov/Documents/GitHub/cs2001-2023-24-group-49-1/src/pages/CheckAllergy.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction AllergyTable() {\n    const [allergies, setAllergies] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const token = sessionStorage.getItem(\"token\");\n                const email = sessionStorage.getItem(\"email\");\n\n                const response = await axios.get(\n                    `http://localhost:8080/api/user/allergy/${email}`,\n                    {\n                        headers: {\n                            Authorization: `Bearer ${token}`,\n                        },\n                    }\n                );\n                setAllergies(response.data);\n            } catch (error) {\n                console.error(\"Error fetching allergy data:\", error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <h3>Allergy Data</h3>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Common Allergies</th>\n                    <th>Uncommon Allergies</th>\n                    <th>Other Allergies</th>\n                </tr>\n                </thead>\n                <tbody>\n                {allergies.length > 0 ? (\n                    allergies.map((allergy, index) => (\n                        <tr key={index}>\n                            <td>{allergy.common_allergies || \"Not chosen\"}</td>\n                            <td>{allergy.uncommon_allergies || \"Not chosen\"}</td>\n                            <td>{allergy.other_allergies || \"Not chosen\"}</td>\n                        </tr>\n                    ))\n                ) : (\n                    <tr>\n                        <td colSpan=\"3\" className=\"text-center\">No allergy data found</td>\n                    </tr>\n                )}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default AllergyTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}