{"ast":null,"code":"export function handlePasswordChange(event, currentState) {\n  const password = event.target.value;\n  let errors = [];\n  if (currentState === 'signUp' || currentState === 'changePassword' || currentState === 'reset') {\n    // Password must contain at least one lowercase letter\n    if (!password.match(/[a-z]/g)) {\n      errors.push('Password must contain at least one lowercase letter.');\n    }\n    // Password must contain at least one uppercase letter\n    if (!password.match(/[A-Z]/g)) {\n      errors.push('Password must contain at least one uppercase letter.');\n    }\n    // Password must contain at least one number\n    if (!password.match(/[0-9]/g)) {\n      errors.push('Password must contain at least one number');\n    }\n    // Password must be at least 8 characters long\n    if (password.length < 8) {\n      errors.push('Password must be at least 8 characters long');\n    }\n    // Clear the \"8 characters long\" error once requirement is met\n    else if (password.length >= 8) {\n      errors = errors.filter(error => error !== 'Password must be at least 8 characters long');\n    }\n    if (errors.length === 0 && password.length >= 8) {\n      return {\n        password,\n        passwordValid: true,\n        errors: []\n      };\n    }\n    return {\n      password,\n      passwordValid: false,\n      errors\n    };\n  } else if (currentState === 'signIn') {\n    return {\n      password,\n      passwordValid: true,\n      errors: []\n    };\n  }\n}\nexport function handleConfirmPasswordChange(event, currentState, password) {\n  const confPassword = event.target.value;\n  let passwordMatch = false;\n  if (currentState === 'signUp' || currentState === 'changePassword' || currentState === 'reset') {\n    let errors = [];\n    if (confPassword !== password) {\n      if (!errors.includes('Passwords do not match')) {\n        errors.push('Passwords do not match');\n      }\n      passwordMatch = false;\n    }\n    // Clear the \"do not match\" error once passwords match\n    else {\n      errors.filter(error => error !== 'Passwords do not match');\n      passwordMatch = true;\n    }\n    return {\n      confPassword,\n      passwordMatch,\n      errors\n    };\n  }\n  return {\n    confPassword: '',\n    passwordMatch: true,\n    errors: []\n  };\n}","map":{"version":3,"names":["handlePasswordChange","event","currentState","password","target","value","errors","match","push","length","filter","error","passwordValid","handleConfirmPasswordChange","confPassword","passwordMatch","includes"],"sources":["/Users/amirbekshomurodov/Documents/GitHub/cs2001-2023-24-group-49-1/src/utilities/passwordHandler.jsx"],"sourcesContent":["export function handlePasswordChange(event, currentState) {\n\n    const password = event.target.value;\n    let errors = [];\n\n    if (currentState === 'signUp' || currentState === 'changePassword' || currentState === 'reset') {\n\n        // Password must contain at least one lowercase letter\n        if (!password.match(/[a-z]/g)) {\n            errors.push('Password must contain at least one lowercase letter.');\n        }\n        // Password must contain at least one uppercase letter\n        if (!password.match(/[A-Z]/g)) {\n            errors.push('Password must contain at least one uppercase letter.');\n        }\n        // Password must contain at least one number\n        if (!password.match(/[0-9]/g)) {\n            errors.push('Password must contain at least one number');\n        }\n        // Password must be at least 8 characters long\n        if (password.length < 8) {\n            errors.push('Password must be at least 8 characters long');\n        }\n        // Clear the \"8 characters long\" error once requirement is met\n        else if (password.length >= 8) {\n            errors = errors.filter(error => error !== 'Password must be at least 8 characters long');\n        }\n        if (errors.length === 0 && password.length >=8 ) {\n            return {password, passwordValid: true, errors:[]};\n        }\n        return {password, passwordValid: false, errors}\n    } else if (currentState === 'signIn') {\n        return {password, passwordValid: true, errors: []};\n    }\n}\n\nexport function handleConfirmPasswordChange(event, currentState, password) {\n    const confPassword = event.target.value;\n    let passwordMatch = false;\n    if (currentState === ('signUp') || currentState === 'changePassword' || currentState === 'reset') {\n        let errors = [];\n        if (confPassword !== password) {\n            if (!errors.includes('Passwords do not match')) {\n                errors.push('Passwords do not match')\n            }\n            passwordMatch = false;\n        }\n        // Clear the \"do not match\" error once passwords match\n        else {\n            errors.filter(error => error !== 'Passwords do not match');\n            passwordMatch = true;\n        }\n        return {confPassword, passwordMatch, errors};\n    }\n    return {confPassword: '', passwordMatch: true, errors: []};\n\n}\n\n\n"],"mappings":"AAAA,OAAO,SAASA,oBAAoBA,CAACC,KAAK,EAAEC,YAAY,EAAE;EAEtD,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK;EACnC,IAAIC,MAAM,GAAG,EAAE;EAEf,IAAIJ,YAAY,KAAK,QAAQ,IAAIA,YAAY,KAAK,gBAAgB,IAAIA,YAAY,KAAK,OAAO,EAAE;IAE5F;IACA,IAAI,CAACC,QAAQ,CAACI,KAAK,CAAC,QAAQ,CAAC,EAAE;MAC3BD,MAAM,CAACE,IAAI,CAAC,sDAAsD,CAAC;IACvE;IACA;IACA,IAAI,CAACL,QAAQ,CAACI,KAAK,CAAC,QAAQ,CAAC,EAAE;MAC3BD,MAAM,CAACE,IAAI,CAAC,sDAAsD,CAAC;IACvE;IACA;IACA,IAAI,CAACL,QAAQ,CAACI,KAAK,CAAC,QAAQ,CAAC,EAAE;MAC3BD,MAAM,CAACE,IAAI,CAAC,2CAA2C,CAAC;IAC5D;IACA;IACA,IAAIL,QAAQ,CAACM,MAAM,GAAG,CAAC,EAAE;MACrBH,MAAM,CAACE,IAAI,CAAC,6CAA6C,CAAC;IAC9D;IACA;IAAA,KACK,IAAIL,QAAQ,CAACM,MAAM,IAAI,CAAC,EAAE;MAC3BH,MAAM,GAAGA,MAAM,CAACI,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAK,6CAA6C,CAAC;IAC5F;IACA,IAAIL,MAAM,CAACG,MAAM,KAAK,CAAC,IAAIN,QAAQ,CAACM,MAAM,IAAG,CAAC,EAAG;MAC7C,OAAO;QAACN,QAAQ;QAAES,aAAa,EAAE,IAAI;QAAEN,MAAM,EAAC;MAAE,CAAC;IACrD;IACA,OAAO;MAACH,QAAQ;MAAES,aAAa,EAAE,KAAK;MAAEN;IAAM,CAAC;EACnD,CAAC,MAAM,IAAIJ,YAAY,KAAK,QAAQ,EAAE;IAClC,OAAO;MAACC,QAAQ;MAAES,aAAa,EAAE,IAAI;MAAEN,MAAM,EAAE;IAAE,CAAC;EACtD;AACJ;AAEA,OAAO,SAASO,2BAA2BA,CAACZ,KAAK,EAAEC,YAAY,EAAEC,QAAQ,EAAE;EACvE,MAAMW,YAAY,GAAGb,KAAK,CAACG,MAAM,CAACC,KAAK;EACvC,IAAIU,aAAa,GAAG,KAAK;EACzB,IAAIb,YAAY,KAAM,QAAS,IAAIA,YAAY,KAAK,gBAAgB,IAAIA,YAAY,KAAK,OAAO,EAAE;IAC9F,IAAII,MAAM,GAAG,EAAE;IACf,IAAIQ,YAAY,KAAKX,QAAQ,EAAE;MAC3B,IAAI,CAACG,MAAM,CAACU,QAAQ,CAAC,wBAAwB,CAAC,EAAE;QAC5CV,MAAM,CAACE,IAAI,CAAC,wBAAwB,CAAC;MACzC;MACAO,aAAa,GAAG,KAAK;IACzB;IACA;IAAA,KACK;MACDT,MAAM,CAACI,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAK,wBAAwB,CAAC;MAC1DI,aAAa,GAAG,IAAI;IACxB;IACA,OAAO;MAACD,YAAY;MAAEC,aAAa;MAAET;IAAM,CAAC;EAChD;EACA,OAAO;IAACQ,YAAY,EAAE,EAAE;IAAEC,aAAa,EAAE,IAAI;IAAET,MAAM,EAAE;EAAE,CAAC;AAE9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}