{"ast":null,"code":"var _jsxFileName = \"/Users/amirbekshomurodov/Documents/GitHub/cs2001-2023-24-group-49-1/src/pages/PasswordReset.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { handleConfirmPasswordChange, handlePasswordChange } from \"../utilities/passwordHandler.jsx\";\nimport './Styles/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PasswordResetPage() {\n  _s();\n  const url = \"http://localhost:8080/api/reset-password\";\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [passwordMatch, setPasswordMatch] = useState(false);\n  const location = useLocation();\n  const token = new URLSearchParams(location.search).get('token');\n  const onChangePassword = event => {\n    const {\n      password,\n      passwordValid,\n      errors\n    } = handlePasswordChange(event, 'reset');\n    setPassword(password);\n    setMessages(errors);\n    setPasswordValid(passwordValid);\n  };\n  const onChangeConfirmPassword = event => {\n    const {\n      confPassword,\n      passwordMatch,\n      errors\n    } = handleConfirmPasswordChange(event, 'reset', password);\n    setConfirmPassword(confPassword);\n    setMessages([errors]);\n    setPasswordMatch(passwordMatch);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Reset Forgotten Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"hide-from-view\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          placeholder: \"Password\",\n          onChange: onChangePassword,\n          onFocus: onChangePassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm-password\",\n            className: \"hide-from-view\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            placeholder: \"Confirm Password\",\n            onChange: onChangeConfirmPassword,\n            onFocus: onChangeConfirmPassword,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-pair\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"submit\",\n              className: \"hide-from-view\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              id: \"submit\",\n              name: \"submit\",\n              className: \"disable\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: messages.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 97\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 54\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n}\n_s(PasswordResetPage, \"5+Qv/4CeSL6XVAvO+4LCwZMGFik=\", false, function () {\n  return [useLocation];\n});\n_c = PasswordResetPage;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetPage\");","map":{"version":3,"names":["React","useState","useLocation","axios","handleConfirmPasswordChange","handlePasswordChange","jsxDEV","_jsxDEV","PasswordResetPage","_s","url","password","setPassword","confirmPassword","setConfirmPassword","messages","setMessages","passwordValid","setPasswordValid","passwordMatch","setPasswordMatch","location","token","URLSearchParams","search","get","onChangePassword","event","errors","onChangeConfirmPassword","confPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","placeholder","onChange","onFocus","required","id","name","map","error","index","_c","$RefreshReg$"],"sources":["/Users/amirbekshomurodov/Documents/GitHub/cs2001-2023-24-group-49-1/src/pages/PasswordReset.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport {useLocation} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {handleConfirmPasswordChange, handlePasswordChange} from \"../utilities/passwordHandler.jsx\";\nimport './Styles/login.css'\n\nexport default function PasswordResetPage() {\n    const url = \"http://localhost:8080/api/reset-password\"\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [passwordValid, setPasswordValid] = useState(false);\n    const [passwordMatch, setPasswordMatch] = useState(false);\n    const location = useLocation();\n    const token = new URLSearchParams(location.search).get('token')\n\n    const onChangePassword = (event) => {\n        const {password, passwordValid, errors} = handlePasswordChange(event, 'reset');\n        setPassword(password);\n        setMessages(errors);\n        setPasswordValid(passwordValid);\n\n    }\n\n    const onChangeConfirmPassword = (event) => {\n        const {confPassword, passwordMatch, errors} = handleConfirmPasswordChange(event, 'reset', password)\n        setConfirmPassword(confPassword);\n        setMessages([errors]);\n        setPasswordMatch(passwordMatch)\n    }\n\n    return (<div className={\"page-container\"}>\n            <div>\n                <h1 className={\"title\"}>Reset Forgotten Password</h1>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\" className={\"hide-from-view\"}>Password</label>\n                    <input type={\"password\"} value={password} placeholder={\"Password\"}\n                           onChange={onChangePassword} onFocus={onChangePassword}\n                           required={true}/>\n                </div>\n                <div className={\"input-group\"}>\n                    <div className={\"input-field\"}>\n                        <label htmlFor={\"confirm-password\"} className={\"hide-from-view\"}>Confirm Password</label>\n                        <input type={\"password\"} value={confirmPassword} placeholder={\"Confirm Password\"}\n                               onChange={onChangeConfirmPassword} onFocus={onChangeConfirmPassword}\n                               required={true}/>\n                    </div>\n                    <div className={\"button-field\"}>\n                        <div className={\"button-pair\"}>\n                            <label htmlFor={\"submit\"} className={\"hide-from-view\"}>Submit</label>\n                            <button type={\"button\"} id={\"submit\"} name={\"submit\"} className=\"disable\">Submit</button>\n                        </div>\n                    </div>\n                </div>\n                <div className={\"message\"}>\n                    {messages.map((error, index) => (<div className=\"error-message\" key={index}><b>{error}</b></div>))}\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}