{"ast":null,"code":"export function handlePasswordChange(event, currentState) {\n  const password = event.target.value;\n  if (currentState === 'signUp' || currentState === 'changePassword') {\n    let passwordValid = false;\n    let errors = [];\n    // Password must contain at least one lowercase letter\n    if (!password.match(/[a-z]/g)) {\n      errors.push('Password must contain at least one lowercase letter.');\n      passwordValid = false;\n    }\n    // Password must contain at least one uppercase letter\n    if (!password.match(/[A-Z]/g)) {\n      errors.push('Password must contain at least one uppercase letter.');\n      passwordValid = false;\n    }\n    // Password must contain at least one number\n    if (!password.match(/[0-9]/g)) {\n      errors.push('Password must contain at least one number');\n      passwordValid = false;\n    }\n    // Password must be at least 8 characters long\n    if (password.length < 8) {\n      errors.push('Password must be at least 8 characters long');\n      passwordValid = false;\n    }\n    // Clear the \"8 characters long\" error once requirement is met\n    else {\n      errors.filter(error => error !== 'Password must be at least 8 characters long');\n    }\n    if (errors.length === 0) {\n      passwordValid = true;\n    }\n    return {\n      password,\n      passwordValid,\n      errors\n    };\n  } else if (currentState === 'signIn') {\n    return {\n      password,\n      passwordValid: true,\n      errors: []\n    };\n  }\n  return {\n    password,\n    passwordValid: true,\n    errors: []\n  };\n}\nexport function handleConfirmPasswordChange(event, currentState, password) {\n  const confPassword = event.target.value;\n  let passwordMatch = false;\n  if (currentState === 'signUp' || currentState === 'changePassword') {\n    let errors = [];\n    if (confPassword !== password) {\n      if (!errors.includes('Passwords do not match')) {\n        errors.push('Passwords do not match');\n      }\n      passwordMatch = false;\n    }\n    // Clear the \"do not match\" error once passwords match\n    else {\n      errors.filter(error => error !== 'Passwords do not match');\n      passwordMatch = true;\n    }\n    return {\n      confPassword,\n      passwordMatch,\n      errors\n    };\n  }\n  return {\n    confPassword: '',\n    passwordMatch: true,\n    errors: []\n  };\n}","map":{"version":3,"names":["handlePasswordChange","event","currentState","password","target","value","passwordValid","errors","match","push","length","filter","error","handleConfirmPasswordChange","confPassword","passwordMatch","includes"],"sources":["/Users/amirbekshomurodov/Documents/GitHub/cs2001-2023-24-group-49-1/src/utilities/passwordHandler.jsx"],"sourcesContent":["export function handlePasswordChange(event, currentState) {\n\n    const password = event.target.value;\n\n    if (currentState === 'signUp' || currentState === 'changePassword') {\n        let passwordValid = false;\n        let errors = [];\n        // Password must contain at least one lowercase letter\n        if (!password.match(/[a-z]/g)) {\n            errors.push('Password must contain at least one lowercase letter.');\n            passwordValid = false;\n        }\n        // Password must contain at least one uppercase letter\n        if (!password.match(/[A-Z]/g)) {\n            errors.push('Password must contain at least one uppercase letter.');\n            passwordValid = false;\n        }\n        // Password must contain at least one number\n        if (!password.match(/[0-9]/g)) {\n            errors.push('Password must contain at least one number');\n            passwordValid = false;\n        }\n        // Password must be at least 8 characters long\n        if (password.length < 8) {\n            errors.push('Password must be at least 8 characters long');\n            passwordValid = false;\n        }\n        // Clear the \"8 characters long\" error once requirement is met\n        else {\n            errors.filter(error => error !== 'Password must be at least 8 characters long');\n        }\n        if (errors.length === 0) {\n            passwordValid = true;\n        }\n        return {password, passwordValid, errors}\n    } else if (currentState === 'signIn') {\n        return {password, passwordValid: true, errors: []};\n    }\n    return {password, passwordValid: true, errors: []}\n}\n\nexport function handleConfirmPasswordChange(event, currentState, password) {\n    const confPassword = event.target.value;\n    let passwordMatch = false;\n    if (currentState === ('signUp') || currentState === 'changePassword') {\n        let errors = [];\n        if (confPassword !== password) {\n            if (!errors.includes('Passwords do not match')) {\n                errors.push('Passwords do not match')\n            }\n            passwordMatch = false;\n        }\n        // Clear the \"do not match\" error once passwords match\n        else {\n            errors.filter(error => error !== 'Passwords do not match');\n            passwordMatch = true;\n        }\n        return {confPassword, passwordMatch, errors};\n    }\n    return {confPassword: '', passwordMatch: true, errors: []};\n\n}\n\n\n"],"mappings":"AAAA,OAAO,SAASA,oBAAoBA,CAACC,KAAK,EAAEC,YAAY,EAAE;EAEtD,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAACC,KAAK;EAEnC,IAAIH,YAAY,KAAK,QAAQ,IAAIA,YAAY,KAAK,gBAAgB,EAAE;IAChE,IAAII,aAAa,GAAG,KAAK;IACzB,IAAIC,MAAM,GAAG,EAAE;IACf;IACA,IAAI,CAACJ,QAAQ,CAACK,KAAK,CAAC,QAAQ,CAAC,EAAE;MAC3BD,MAAM,CAACE,IAAI,CAAC,sDAAsD,CAAC;MACnEH,aAAa,GAAG,KAAK;IACzB;IACA;IACA,IAAI,CAACH,QAAQ,CAACK,KAAK,CAAC,QAAQ,CAAC,EAAE;MAC3BD,MAAM,CAACE,IAAI,CAAC,sDAAsD,CAAC;MACnEH,aAAa,GAAG,KAAK;IACzB;IACA;IACA,IAAI,CAACH,QAAQ,CAACK,KAAK,CAAC,QAAQ,CAAC,EAAE;MAC3BD,MAAM,CAACE,IAAI,CAAC,2CAA2C,CAAC;MACxDH,aAAa,GAAG,KAAK;IACzB;IACA;IACA,IAAIH,QAAQ,CAACO,MAAM,GAAG,CAAC,EAAE;MACrBH,MAAM,CAACE,IAAI,CAAC,6CAA6C,CAAC;MAC1DH,aAAa,GAAG,KAAK;IACzB;IACA;IAAA,KACK;MACDC,MAAM,CAACI,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAK,6CAA6C,CAAC;IACnF;IACA,IAAIL,MAAM,CAACG,MAAM,KAAK,CAAC,EAAE;MACrBJ,aAAa,GAAG,IAAI;IACxB;IACA,OAAO;MAACH,QAAQ;MAAEG,aAAa;MAAEC;IAAM,CAAC;EAC5C,CAAC,MAAM,IAAIL,YAAY,KAAK,QAAQ,EAAE;IAClC,OAAO;MAACC,QAAQ;MAAEG,aAAa,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAE,CAAC;EACtD;EACA,OAAO;IAACJ,QAAQ;IAAEG,aAAa,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAE,CAAC;AACtD;AAEA,OAAO,SAASM,2BAA2BA,CAACZ,KAAK,EAAEC,YAAY,EAAEC,QAAQ,EAAE;EACvE,MAAMW,YAAY,GAAGb,KAAK,CAACG,MAAM,CAACC,KAAK;EACvC,IAAIU,aAAa,GAAG,KAAK;EACzB,IAAIb,YAAY,KAAM,QAAS,IAAIA,YAAY,KAAK,gBAAgB,EAAE;IAClE,IAAIK,MAAM,GAAG,EAAE;IACf,IAAIO,YAAY,KAAKX,QAAQ,EAAE;MAC3B,IAAI,CAACI,MAAM,CAACS,QAAQ,CAAC,wBAAwB,CAAC,EAAE;QAC5CT,MAAM,CAACE,IAAI,CAAC,wBAAwB,CAAC;MACzC;MACAM,aAAa,GAAG,KAAK;IACzB;IACA;IAAA,KACK;MACDR,MAAM,CAACI,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAK,wBAAwB,CAAC;MAC1DG,aAAa,GAAG,IAAI;IACxB;IACA,OAAO;MAACD,YAAY;MAAEC,aAAa;MAAER;IAAM,CAAC;EAChD;EACA,OAAO;IAACO,YAAY,EAAE,EAAE;IAAEC,aAAa,EAAE,IAAI;IAAER,MAAM,EAAE;EAAE,CAAC;AAE9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}